//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: sdk.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Dispatch
import Foundation
import SwiftGRPC
import SwiftProtobuf

internal protocol Grpc_SDKQueryInstalledCall: ClientCallUnary {}

fileprivate final class Grpc_SDKQueryInstalledCallBase: ClientCallUnaryBase<Grpc_Empty, Grpc_QueryChainCodeResponse>, Grpc_SDKQueryInstalledCall {
  override class var method: String { return "/grpc.SDK/QueryInstalled" }
}

internal protocol Grpc_SDKQueryInstantiatedCall: ClientCallUnary {}

fileprivate final class Grpc_SDKQueryInstantiatedCallBase: ClientCallUnaryBase<Grpc_Empty, Grpc_QueryChainCodeResponse>, Grpc_SDKQueryInstantiatedCall {
  override class var method: String { return "/grpc.SDK/QueryInstantiated" }
}

internal protocol Grpc_SDKUpgradeCall: ClientCallUnary {}

fileprivate final class Grpc_SDKUpgradeCallBase: ClientCallUnaryBase<Grpc_UpgradeChainCodeRequest, Grpc_UpgradeChainCodeResponse>, Grpc_SDKUpgradeCall {
  override class var method: String { return "/grpc.SDK/Upgrade" }
}

internal protocol Grpc_SDKQueryCall: ClientCallUnary {}

fileprivate final class Grpc_SDKQueryCallBase: ClientCallUnaryBase<Grpc_QueryRequest, Grpc_QueryResponse>, Grpc_SDKQueryCall {
  override class var method: String { return "/grpc.SDK/Query" }
}

internal protocol Grpc_SDKCreateCall: ClientCallUnary {}

fileprivate final class Grpc_SDKCreateCallBase: ClientCallUnaryBase<Grpc_CreateRequest, Grpc_CreateResponse>, Grpc_SDKCreateCall {
  override class var method: String { return "/grpc.SDK/Create" }
}

internal protocol Grpc_SDKTransferCall: ClientCallUnary {}

fileprivate final class Grpc_SDKTransferCallBase: ClientCallUnaryBase<Grpc_TransferRequest, Grpc_TransferResponse>, Grpc_SDKTransferCall {
  override class var method: String { return "/grpc.SDK/Transfer" }
}

internal protocol Grpc_SDKQueryByIdCall: ClientCallUnary {}

fileprivate final class Grpc_SDKQueryByIdCallBase: ClientCallUnaryBase<Grpc_QueryByIdRequest, Grpc_QueryByIdResponse>, Grpc_SDKQueryByIdCall {
  override class var method: String { return "/grpc.SDK/QueryById" }
}


/// Instantiate Grpc_SDKServiceClient, then call methods of this protocol to make API calls.
internal protocol Grpc_SDKService: ServiceClient {
  /// Synchronous. Unary.
  func queryInstalled(_ request: Grpc_Empty, metadata customMetadata: Metadata) throws -> Grpc_QueryChainCodeResponse
  /// Asynchronous. Unary.
  @discardableResult
  func queryInstalled(_ request: Grpc_Empty, metadata customMetadata: Metadata, completion: @escaping (Grpc_QueryChainCodeResponse?, CallResult) -> Void) throws -> Grpc_SDKQueryInstalledCall

  /// Synchronous. Unary.
  func queryInstantiated(_ request: Grpc_Empty, metadata customMetadata: Metadata) throws -> Grpc_QueryChainCodeResponse
  /// Asynchronous. Unary.
  @discardableResult
  func queryInstantiated(_ request: Grpc_Empty, metadata customMetadata: Metadata, completion: @escaping (Grpc_QueryChainCodeResponse?, CallResult) -> Void) throws -> Grpc_SDKQueryInstantiatedCall

  /// Synchronous. Unary.
  func upgrade(_ request: Grpc_UpgradeChainCodeRequest, metadata customMetadata: Metadata) throws -> Grpc_UpgradeChainCodeResponse
  /// Asynchronous. Unary.
  @discardableResult
  func upgrade(_ request: Grpc_UpgradeChainCodeRequest, metadata customMetadata: Metadata, completion: @escaping (Grpc_UpgradeChainCodeResponse?, CallResult) -> Void) throws -> Grpc_SDKUpgradeCall

  /// Synchronous. Unary.
  func query(_ request: Grpc_QueryRequest, metadata customMetadata: Metadata) throws -> Grpc_QueryResponse
  /// Asynchronous. Unary.
  @discardableResult
  func query(_ request: Grpc_QueryRequest, metadata customMetadata: Metadata, completion: @escaping (Grpc_QueryResponse?, CallResult) -> Void) throws -> Grpc_SDKQueryCall

  /// Synchronous. Unary.
  func create(_ request: Grpc_CreateRequest, metadata customMetadata: Metadata) throws -> Grpc_CreateResponse
  /// Asynchronous. Unary.
  @discardableResult
  func create(_ request: Grpc_CreateRequest, metadata customMetadata: Metadata, completion: @escaping (Grpc_CreateResponse?, CallResult) -> Void) throws -> Grpc_SDKCreateCall

  /// Synchronous. Unary.
  func transfer(_ request: Grpc_TransferRequest, metadata customMetadata: Metadata) throws -> Grpc_TransferResponse
  /// Asynchronous. Unary.
  @discardableResult
  func transfer(_ request: Grpc_TransferRequest, metadata customMetadata: Metadata, completion: @escaping (Grpc_TransferResponse?, CallResult) -> Void) throws -> Grpc_SDKTransferCall

  /// Synchronous. Unary.
  func queryById(_ request: Grpc_QueryByIdRequest, metadata customMetadata: Metadata) throws -> Grpc_QueryByIdResponse
  /// Asynchronous. Unary.
  @discardableResult
  func queryById(_ request: Grpc_QueryByIdRequest, metadata customMetadata: Metadata, completion: @escaping (Grpc_QueryByIdResponse?, CallResult) -> Void) throws -> Grpc_SDKQueryByIdCall

}

internal extension Grpc_SDKService {
  /// Synchronous. Unary.
  func queryInstalled(_ request: Grpc_Empty) throws -> Grpc_QueryChainCodeResponse {
    return try self.queryInstalled(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func queryInstalled(_ request: Grpc_Empty, completion: @escaping (Grpc_QueryChainCodeResponse?, CallResult) -> Void) throws -> Grpc_SDKQueryInstalledCall {
    return try self.queryInstalled(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func queryInstantiated(_ request: Grpc_Empty) throws -> Grpc_QueryChainCodeResponse {
    return try self.queryInstantiated(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func queryInstantiated(_ request: Grpc_Empty, completion: @escaping (Grpc_QueryChainCodeResponse?, CallResult) -> Void) throws -> Grpc_SDKQueryInstantiatedCall {
    return try self.queryInstantiated(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func upgrade(_ request: Grpc_UpgradeChainCodeRequest) throws -> Grpc_UpgradeChainCodeResponse {
    return try self.upgrade(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func upgrade(_ request: Grpc_UpgradeChainCodeRequest, completion: @escaping (Grpc_UpgradeChainCodeResponse?, CallResult) -> Void) throws -> Grpc_SDKUpgradeCall {
    return try self.upgrade(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func query(_ request: Grpc_QueryRequest) throws -> Grpc_QueryResponse {
    return try self.query(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func query(_ request: Grpc_QueryRequest, completion: @escaping (Grpc_QueryResponse?, CallResult) -> Void) throws -> Grpc_SDKQueryCall {
    return try self.query(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func create(_ request: Grpc_CreateRequest) throws -> Grpc_CreateResponse {
    return try self.create(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func create(_ request: Grpc_CreateRequest, completion: @escaping (Grpc_CreateResponse?, CallResult) -> Void) throws -> Grpc_SDKCreateCall {
    return try self.create(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func transfer(_ request: Grpc_TransferRequest) throws -> Grpc_TransferResponse {
    return try self.transfer(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func transfer(_ request: Grpc_TransferRequest, completion: @escaping (Grpc_TransferResponse?, CallResult) -> Void) throws -> Grpc_SDKTransferCall {
    return try self.transfer(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func queryById(_ request: Grpc_QueryByIdRequest) throws -> Grpc_QueryByIdResponse {
    return try self.queryById(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func queryById(_ request: Grpc_QueryByIdRequest, completion: @escaping (Grpc_QueryByIdResponse?, CallResult) -> Void) throws -> Grpc_SDKQueryByIdCall {
    return try self.queryById(request, metadata: self.metadata, completion: completion)
  }

}

internal final class Grpc_SDKServiceClient: ServiceClientBase, Grpc_SDKService {
  /// Synchronous. Unary.
  internal func queryInstalled(_ request: Grpc_Empty, metadata customMetadata: Metadata) throws -> Grpc_QueryChainCodeResponse {
    return try Grpc_SDKQueryInstalledCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func queryInstalled(_ request: Grpc_Empty, metadata customMetadata: Metadata, completion: @escaping (Grpc_QueryChainCodeResponse?, CallResult) -> Void) throws -> Grpc_SDKQueryInstalledCall {
    return try Grpc_SDKQueryInstalledCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func queryInstantiated(_ request: Grpc_Empty, metadata customMetadata: Metadata) throws -> Grpc_QueryChainCodeResponse {
    return try Grpc_SDKQueryInstantiatedCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func queryInstantiated(_ request: Grpc_Empty, metadata customMetadata: Metadata, completion: @escaping (Grpc_QueryChainCodeResponse?, CallResult) -> Void) throws -> Grpc_SDKQueryInstantiatedCall {
    return try Grpc_SDKQueryInstantiatedCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func upgrade(_ request: Grpc_UpgradeChainCodeRequest, metadata customMetadata: Metadata) throws -> Grpc_UpgradeChainCodeResponse {
    return try Grpc_SDKUpgradeCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func upgrade(_ request: Grpc_UpgradeChainCodeRequest, metadata customMetadata: Metadata, completion: @escaping (Grpc_UpgradeChainCodeResponse?, CallResult) -> Void) throws -> Grpc_SDKUpgradeCall {
    return try Grpc_SDKUpgradeCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func query(_ request: Grpc_QueryRequest, metadata customMetadata: Metadata) throws -> Grpc_QueryResponse {
    return try Grpc_SDKQueryCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func query(_ request: Grpc_QueryRequest, metadata customMetadata: Metadata, completion: @escaping (Grpc_QueryResponse?, CallResult) -> Void) throws -> Grpc_SDKQueryCall {
    return try Grpc_SDKQueryCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func create(_ request: Grpc_CreateRequest, metadata customMetadata: Metadata) throws -> Grpc_CreateResponse {
    return try Grpc_SDKCreateCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func create(_ request: Grpc_CreateRequest, metadata customMetadata: Metadata, completion: @escaping (Grpc_CreateResponse?, CallResult) -> Void) throws -> Grpc_SDKCreateCall {
    return try Grpc_SDKCreateCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func transfer(_ request: Grpc_TransferRequest, metadata customMetadata: Metadata) throws -> Grpc_TransferResponse {
    return try Grpc_SDKTransferCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func transfer(_ request: Grpc_TransferRequest, metadata customMetadata: Metadata, completion: @escaping (Grpc_TransferResponse?, CallResult) -> Void) throws -> Grpc_SDKTransferCall {
    return try Grpc_SDKTransferCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func queryById(_ request: Grpc_QueryByIdRequest, metadata customMetadata: Metadata) throws -> Grpc_QueryByIdResponse {
    return try Grpc_SDKQueryByIdCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func queryById(_ request: Grpc_QueryByIdRequest, metadata customMetadata: Metadata, completion: @escaping (Grpc_QueryByIdResponse?, CallResult) -> Void) throws -> Grpc_SDKQueryByIdCall {
    return try Grpc_SDKQueryByIdCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}

/// To build a server, implement a class that conforms to this protocol.
/// If one of the methods returning `ServerStatus?` returns nil,
/// it is expected that you have already returned a status to the client by means of `session.close`.
internal protocol Grpc_SDKProvider: ServiceProvider {
  func queryInstalled(request: Grpc_Empty, session: Grpc_SDKQueryInstalledSession) throws -> Grpc_QueryChainCodeResponse
  func queryInstantiated(request: Grpc_Empty, session: Grpc_SDKQueryInstantiatedSession) throws -> Grpc_QueryChainCodeResponse
  func upgrade(request: Grpc_UpgradeChainCodeRequest, session: Grpc_SDKUpgradeSession) throws -> Grpc_UpgradeChainCodeResponse
  func query(request: Grpc_QueryRequest, session: Grpc_SDKQuerySession) throws -> Grpc_QueryResponse
  func create(request: Grpc_CreateRequest, session: Grpc_SDKCreateSession) throws -> Grpc_CreateResponse
  func transfer(request: Grpc_TransferRequest, session: Grpc_SDKTransferSession) throws -> Grpc_TransferResponse
  func queryById(request: Grpc_QueryByIdRequest, session: Grpc_SDKQueryByIdSession) throws -> Grpc_QueryByIdResponse
}

extension Grpc_SDKProvider {
  internal var serviceName: String { return "grpc.SDK" }

  /// Determines and calls the appropriate request handler, depending on the request's method.
  /// Throws `HandleMethodError.unknownMethod` for methods not handled by this service.
  internal func handleMethod(_ method: String, handler: Handler) throws -> ServerStatus? {
    switch method {
    case "/grpc.SDK/QueryInstalled":
      return try Grpc_SDKQueryInstalledSessionBase(
        handler: handler,
        providerBlock: { try self.queryInstalled(request: $0, session: $1 as! Grpc_SDKQueryInstalledSessionBase) })
          .run()
    case "/grpc.SDK/QueryInstantiated":
      return try Grpc_SDKQueryInstantiatedSessionBase(
        handler: handler,
        providerBlock: { try self.queryInstantiated(request: $0, session: $1 as! Grpc_SDKQueryInstantiatedSessionBase) })
          .run()
    case "/grpc.SDK/Upgrade":
      return try Grpc_SDKUpgradeSessionBase(
        handler: handler,
        providerBlock: { try self.upgrade(request: $0, session: $1 as! Grpc_SDKUpgradeSessionBase) })
          .run()
    case "/grpc.SDK/Query":
      return try Grpc_SDKQuerySessionBase(
        handler: handler,
        providerBlock: { try self.query(request: $0, session: $1 as! Grpc_SDKQuerySessionBase) })
          .run()
    case "/grpc.SDK/Create":
      return try Grpc_SDKCreateSessionBase(
        handler: handler,
        providerBlock: { try self.create(request: $0, session: $1 as! Grpc_SDKCreateSessionBase) })
          .run()
    case "/grpc.SDK/Transfer":
      return try Grpc_SDKTransferSessionBase(
        handler: handler,
        providerBlock: { try self.transfer(request: $0, session: $1 as! Grpc_SDKTransferSessionBase) })
          .run()
    case "/grpc.SDK/QueryById":
      return try Grpc_SDKQueryByIdSessionBase(
        handler: handler,
        providerBlock: { try self.queryById(request: $0, session: $1 as! Grpc_SDKQueryByIdSessionBase) })
          .run()
    default:
      throw HandleMethodError.unknownMethod
    }
  }
}

internal protocol Grpc_SDKQueryInstalledSession: ServerSessionUnary {}

fileprivate final class Grpc_SDKQueryInstalledSessionBase: ServerSessionUnaryBase<Grpc_Empty, Grpc_QueryChainCodeResponse>, Grpc_SDKQueryInstalledSession {}

internal protocol Grpc_SDKQueryInstantiatedSession: ServerSessionUnary {}

fileprivate final class Grpc_SDKQueryInstantiatedSessionBase: ServerSessionUnaryBase<Grpc_Empty, Grpc_QueryChainCodeResponse>, Grpc_SDKQueryInstantiatedSession {}

internal protocol Grpc_SDKUpgradeSession: ServerSessionUnary {}

fileprivate final class Grpc_SDKUpgradeSessionBase: ServerSessionUnaryBase<Grpc_UpgradeChainCodeRequest, Grpc_UpgradeChainCodeResponse>, Grpc_SDKUpgradeSession {}

internal protocol Grpc_SDKQuerySession: ServerSessionUnary {}

fileprivate final class Grpc_SDKQuerySessionBase: ServerSessionUnaryBase<Grpc_QueryRequest, Grpc_QueryResponse>, Grpc_SDKQuerySession {}

internal protocol Grpc_SDKCreateSession: ServerSessionUnary {}

fileprivate final class Grpc_SDKCreateSessionBase: ServerSessionUnaryBase<Grpc_CreateRequest, Grpc_CreateResponse>, Grpc_SDKCreateSession {}

internal protocol Grpc_SDKTransferSession: ServerSessionUnary {}

fileprivate final class Grpc_SDKTransferSessionBase: ServerSessionUnaryBase<Grpc_TransferRequest, Grpc_TransferResponse>, Grpc_SDKTransferSession {}

internal protocol Grpc_SDKQueryByIdSession: ServerSessionUnary {}

fileprivate final class Grpc_SDKQueryByIdSessionBase: ServerSessionUnaryBase<Grpc_QueryByIdRequest, Grpc_QueryByIdResponse>, Grpc_SDKQueryByIdSession {}

